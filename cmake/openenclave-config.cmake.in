# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

@PACKAGE_INIT@

# Reference data.
set(OE_BRANCH "@GIT_BRANCH@")
set(OE_COMMIT "@GIT_COMMIT@")
set(OE_BUILD_NUMBER "@BUILD_NUMBER@")

set_and_check(OE_LIBDIR "@PACKAGE_CMAKE_INSTALL_LIBDIR@")
set_and_check(OE_BINDIR "@PACKAGE_CMAKE_INSTALL_BINDIR@")
set_and_check(OE_DATADIR "@PACKAGE_CMAKE_INSTALL_DATADIR@")
set_and_check(OE_INCLUDEDIR "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")

# Dependencies.
include(CMakeFindDependencyMacro)
find_dependency(Threads)

# This target is an OCaml executable, not C++, so we have to manually
# "export" it here for users of the package.
if(NOT TARGET openenclave::oeedger8r)
  add_executable(openenclave::oeedger8r IMPORTED)
  set_target_properties(openenclave::oeedger8r PROPERTIES IMPORTED_LOCATION ${OE_BINDIR}/oeedger8r)
endif ()

# Similarly, this is a shell script.
if(NOT TARGET openenclave::oegdb)
  add_executable(openenclave::oegdb IMPORTED)
  set_target_properties(openenclave::oegdb PROPERTIES IMPORTED_LOCATION ${OE_BINDIR}/oegdb)
endif ()

# Include the automatically exported targets.
include("${CMAKE_CURRENT_LIST_DIR}/openenclave-targets.cmake")

# Apply Spectre mitigations if available.
set(OE_SPECTRE_MITIGATION_FLAGS "@SPECTRE_MITIGATION_FLAGS@")

# Check for compiler flags support.
if (CMAKE_C_COMPILER)
  include(CheckCCompilerFlag)
  check_c_compiler_flag("${OE_SPECTRE_MITIGATION_FLAGS}" OE_SPECTRE_MITIGATION_C_FLAGS_SUPPORTED)
endif ()

if (CMAKE_CXX_COMPILER)
  include(CheckCXXCompilerFlag)
  check_cxx_compiler_flag("${OE_SPECTRE_MITIGATION_FLAGS}" OE_SPECTRE_MITIGATION_CXX_FLAGS_SUPPORTED)
endif ()

if (OE_SPECTRE_MITIGATION_C_FLAGS_SUPPORTED OR OE_SPECTRE_MITIGATION_CXX_FLAGS_SUPPORTED)
  target_compile_options(openenclave::oecore INTERFACE ${OE_SPECTRE_MITIGATION_FLAGS})
endif ()
