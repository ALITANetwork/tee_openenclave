# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

---
- name: Check for existing required binaries
  stat:
    path: "{{ item }}"
  with_items: "{{ validation_binaries }}"
  register: binary
  failed_when: binary.stat.executable == False

- name: Check for existing required directories
  stat:
    path: "{{ item }}"
  with_items: "{{ validation_directories }}"
  register: directory
  failed_when: directory.stat.isdir == False

- name: Check for existing required files
  stat:
    path: "{{ item }}"
  with_items: "{{ validation_files }}"
  register: file
  failed_when: file.stat.exists == False

- name: Cmake version check
  command: "cmake --version"
  register: cmake_check_version
  failed_when: cmake_check_version.stdout.find(cmake_target_version) == -1

- name: Docker version check
  command: "docker --version"
  register: docker_check_version
  failed_when: docker_check_version.stdout.find(docker_target_version) == -1

- name: Dockerd version check
  command: "dockerd --version"
  register: dockerd_check_version
  failed_when: dockerd_check_version.stdout.find(dockerd_target_version) == -1

- name: Clang version check
  command: "clang-7 --version"
  register: clang_check_version
  failed_when: clang_check_version.stdout.find(clang_target_version) == -1

- name: Ocaml version check
  command: "ocaml -version"
  register: ocaml_check_version
  failed_when: ocaml_check_version.stdout.find(ocaml_target_version) == -1
