<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!--
        =======================================================================
        Exports Section
        =======================================================================

        This section creates variables that point to content inside the NuGet
        package that may be consumed by Visual Studio projects independently of
        this file.
    -->

    <!-- Expose oeedger8r.exe -->
    <PropertyGroup>
        <OEEdger8rPath>$(MSBuildThisFileDirectory)..\..\tools\oeedger8r.exe</OEEdger8rPath>
        <OEIncludePath>$(MSBuildThisFileDirectory)include</OEIncludePath>
    </PropertyGroup>

    <!--
        =======================================================================
        Shorthands Section
        =======================================================================

        This section creates variables that express whether a build is:
        1. Debug or Release
        2. x86 or x64 or ARM
        3. SGX or TrustZone
        4. Simulation
    -->

    <!-- Debug/Release Shorthands -->
    <Choose>
        <When Condition="'$(Configuration)' == 'Debug' Or '$(Configuration)' == 'Simulation' Or '$(Configuration)' == 'SGX-Debug' Or '$(Configuration)' == 'SGX-Simulation-Debug' Or '$(Configuration)' == 'TZ-OPTEE-Debug' Or '$(Configuration)' == 'OPTEE-Simulation-Debug'">
            <PropertyGroup>
                <OEIsDebug>True</OEIsDebug>
                <OEIsRelease>False</OEIsRelease>

                <OELibSuffix>Debug</OELibSuffix>
            </PropertyGroup>
        </When>
        <When Condition="'$(Configuration)' == 'Prerelease' Or '$(Configuration)' == 'Release' Or '$(Configuration)' == 'SGX-Release' Or '$(Configuration)' == 'SGX-Simulation-Release' Or '$(Configuration)' == 'TZ-OPTEE-Release'">
            <PropertyGroup>
                <OEIsDebug>False</OEIsDebug>
                <OEIsRelease>True</OEIsRelease>

                <OELibSuffix>Release</OELibSuffix>
            </PropertyGroup>
        </When>
    </Choose>

    <!-- Architecture Shorthands -->
    <Choose>
        <When Condition="'$(Platform)' == 'Win32' Or '$(Platform)' == 'x86'">
            <PropertyGroup>
                <OEIsX86>True</OEIsX86>
                <OEIsX64>False</OEIsX64>
                <OEIsARM>False</OEIsARM>
            </PropertyGroup>
        </When>
        <When Condition="'$(Platform)' == 'x64'">
            <PropertyGroup>
                <OEIsX86>False</OEIsX86>
                <OEIsX64>True</OEIsX64>
                <OEIsARM>False</OEIsARM>
            </PropertyGroup>
        </When>
        <When Condition="'$(Platform)' == 'ARM'">
            <PropertyGroup>
                <OEIsX86>False</OEIsX86>
                <OEIsX64>False</OEIsX64>
                <OEIsARM>True</OEIsARM>
            </PropertyGroup>
        </When>
    </Choose>

    <!-- TEE Shorthands -->
    <Choose>
        <When Condition="('$(Configuration)' == 'Debug' Or '$(Configuration)' == 'Prerelease' Or '$(Configuration)' == 'Release' Or '$(Configuration)' == 'SGX-Debug') And ($(OEIsX86) == True Or $(OEIsX64) == True)">
            <PropertyGroup>
                <OEIsSgx>True</OEIsSgx>
                <OEIsTz>False</OEIsTz>
                <OEIsSim>False</OEIsSim>
            </PropertyGroup>
        </When>
        <When Condition="('$(Configuration)' == 'Simulation' Or '$(Configuration)' == 'SGX-Simulation-Debug') And ($(OEIsX86) == True Or $(OEIsX64) == True)">
            <PropertyGroup>
                <OEIsSgx>True</OEIsSgx>
                <OEIsTz>False</OEIsTz>
                <OEIsSim>True</OEIsSim>
            </PropertyGroup>
        </When>
        <When Condition="('$(Configuration)' == 'Debug' Or '$(Configuration)' == 'Release' Or '$(Configuration)' == 'TZ-OPTEE-Debug') And ($(OEIsARM) == True)">
            <PropertyGroup>
                <OEIsSgx>False</OEIsSgx>
                <OEIsTz>True</OEIsTz>
                <OEIsSim>False</OEIsSim>
            </PropertyGroup>
        </When>
        <When Condition="('$(Configuration)' == 'OPTEE-Simulation-Debug') And ($(OEIsX86) == True)">
            <PropertyGroup>
                <OEIsSgx>False</OEIsSgx>
                <OEIsTz>True</OEIsTz>
                <OEIsSim>True</OEIsSim>
            </PropertyGroup>
        </When>
    </Choose>

    <!--
        ==================================================================================
        Build Validation Section
        ==================================================================================

        This section creates targets that validate that a build is correct.
    -->

    <Target Name="_OECheckForInvalidBuild"
            BeforeTargets="$(BuildDependsOn);Build;$(RebuildDependsOn);Rebuild;$(CleanDependsOn);Clean">
        <Error Condition="$(OEIsTz) == True And $(OEIsSim) == True And ($(OEIsx64) == True Or $(OEIsARM) == True)"
               Text="OP-TEE Simulation builds are only allowed for x86." />
        <Error Condition="$(OEIsTz) == True And $(OEIsSim) == True And $(OEIsRelease) == True"
               Text="OP-TEE Simulation builds are only allowed in a Debug configuration." />
    </Target>

    <!--
        ==================================================================================
        Libraries Section
        ==================================================================================

        This section creates variables hold paths to libraries included in
        this NuGet package as well as to external libraries that enclaves
        and hosts may depend on.
    -->

    <!-- Relative paths to the Open EncSDK Libraries within the NuGet Package -->
    <PropertyGroup>
        <OESgxHwX86>$(MSBuildThisFileDirectory)..\..\lib\native\v141\sgx\hw\x86\$(OELibSuffix)</OESgxHwX86>
        <OESgxHwX64>$(MSBuildThisFileDirectory)..\..\lib\native\v141\sgx\hw\x64\$(OELibSuffix)</OESgxHwX64>

        <OESgxSimX86>$(MSBuildThisFileDirectory)..\..\lib\native\v141\sgx\sim\x86\$(OELibSuffix)</OESgxSimX86>
        <OESgxSimX64>$(MSBuildThisFileDirectory)..\..\lib\native\v141\sgx\sim\x64\$(OELibSuffix)</OESgxSimX64>

        <OETzHwArm>$(MSBuildThisFileDirectory)..\..\lib\native\v141\tz\hw\arm\$(OELibSuffix)</OETzHwArm>

        <OEOpteeSimX86>$(MSBuildThisFileDirectory)..\..\lib\native\v141\tz\sim\x86\Debug</OEOpteeSimX86>
    </PropertyGroup>

    <!-- List of SGX libraries for Enclaves and Hosts -->
    <PropertyGroup>
        <OESgxLibsT>sgx_tstdc.lib;sgx_tprotected_fs.lib;sgx_tcxx.lib;sgx_tstdc.lib;sgx_tcrypto.lib</OESgxLibsT>
        <OESgxHwLibsT>$(OESgxLibsT);sgx_trts.lib;sgx_tservice.lib</OESgxHwLibsT>
        <OESgxSimLibsT>$(OESgxLibsT);sgx_trts_sim.lib;sgx_tservice_sim.lib</OESgxSimLibsT>

        <OESgxLibsU>sgx_uprotected_fs.lib</OESgxLibsU>
        <OESgxHwLibsU>$(OESgxLibsU);sgx_urts.lib;sgx_uae_service.lib</OESgxHwLibsU>
        <OESgxSimLibsU>$(OESgxLibsU);sgx_urts_sim.lib;sgx_uae_service_sim.lib</OESgxSimLibsU>
    </PropertyGroup>
    
    <!--
        =======================================================================
        Compilation and Linking Section
        =======================================================================

        This section configures compiler and linker options, except for include
        paths, library paths, and libraries.
    -->

    <!-- Configure SGX Enclave Compilation and Linking, except x86-OPTEE-Simulation-Debug -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave' And !($(OEIsTz) == True And $(OEIsSim) == True)">
        <ClCompile>
            <IgnoreStandardIncludePath>True</IgnoreStandardIncludePath>
            <BasicRuntimeChecks>Default</BasicRuntimeChecks>
        </ClCompile>
        <Link>
            <IgnoreAllDefaultLibraries>True</IgnoreAllDefaultLibraries>
            <SubSystem>NotSet</SubSystem>
            <NoEntryPoint>True</NoEntryPoint>
        </Link>
    </ItemDefinitionGroup>
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave' And $(OEIsDebug) == True And !($(OEIsTz) == True And $(OEIsSim) == True)">
        <ClCompile>
            <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
        </ClCompile>
    </ItemDefinitionGroup>
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave' And $(OEIsRelease) == True And !($(OEIsTz) == True And $(OEIsSim) == True)">
        <ClCompile>
            <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
        </ClCompile>
    </ItemDefinitionGroup>

    <!--
        =======================================================================
        Includes Section
        =======================================================================

        This section configures compiler include paths.
    -->

    <!-- Additional Include Directories for Enclaves and Hosts -->
    <ItemDefinitionGroup>
        <ClCompile>
            <AdditionalIncludeDirectories>$(MSBuildThisFileDirectory)include;$(MSBuildThisFileDirectory)include\new_platforms;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
        </ClCompile>
    </ItemDefinitionGroup>

    <!-- Additional Include Directories for Enclaves only -->

    <!-- *-SGX-Debug and *-SGX-Simulation-Debug -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave' And $(OEIsSgx) == True">
        <ClCompile>
            <AdditionalIncludeDirectories>$(SGXSDKInstallPath)include;$(SGXSDKInstallPath)include\tlibc;$(SGXSDKInstallPath)include\libc++;$(MSBuildThisFileDirectory)include\new_platforms\sgx\enclave;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
        </ClCompile>
    </ItemDefinitionGroup>

    <!-- x86-OPTEE-Simulation-Debug -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave' And $(OEIsTz) == True And $(OEIsSim) == True">
        <ClCompile>
            <AdditionalIncludeDirectories>$(MSBuildThisFileDirectory)include\new_platforms\optee\enclave\Simulator;$(MSBuildThisFileDirectory)include\new_platforms\optee\enclave;$(MSBuildThisFileDirectory)include\new_platforms\optee;$(MSBuildThisFileDirectory)include\cyrep;$(OETADevKitPath)\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
        </ClCompile>
    </ItemDefinitionGroup>

    <!-- Additional Include Directories for Hosts Only -->

    <!-- *-SGX-Debug and *-SGX-Simulation-Debug -->
    <ItemDefinitionGroup Condition="'$(OEType)' != 'Enclave' And $(OEIsSgx) == True">
        <ClCompile>
            <AdditionalIncludeDirectories>$(SGXSDKInstallPath)include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
        </ClCompile>
    </ItemDefinitionGroup>

    <!--
        =======================================================================
        Preprocessor Definitions Section
        =======================================================================

        This section configures preprocessor definitions.
    -->

    <!-- Preprocessor Definitions for Enclaves Only -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave'">
        <ClCompile>
            <!-- SGX Hardware and Simulation -->
            <PreprocessorDefinitions Condition="$(OEIsSgx) == True">OE_NO_SAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>

            <!-- OP-TEE Simulation -->
            <PreprocessorDefinitions Condition="$(OEIsTz) == True And $(OEIsSim) == True">OE_SIMULATE_OPTEE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
        </ClCompile>
    </ItemDefinitionGroup>

    <!-- Preprocessor Definitions for Hosts Only -->
    <ItemDefinitionGroup Condition="'$(OEType)' != 'Enclave'">
        <ClCompile>
            <!-- OP-TEE Simulation -->
            <PreprocessorDefinitions Condition="$(OEIsTz) == True And $(OEIsSim) == True">OE_SIMULATE_OPTEE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
        </ClCompile>
    </ItemDefinitionGroup>

    <!--
        =======================================================================
        Libraries Section
        =======================================================================

        This section configures additional library paths and libraries.
    -->

    <!-- Additional Library Directories for Enclaves and Hosts -->
    <ItemDefinitionGroup>
        <Link>
            <!-- x86-SGX-Debug & x86-SGX-Simulation-Debug -->
            <AdditionalLibraryDirectories Condition="$(OEIsSgx) == True And $(OEIsX86) == True">$(SGXSDKInstallPath)bin\Win32\$(OELibSuffix);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>

            <!-- x64-SGX-Debug & x64-SGX-Simulation-Debug -->
            <AdditionalLibraryDirectories Condition="$(OEIsSgx) == True And $(OEIsX64) == True">$(SGXSDKInstallPath)bin\x64\$(OELibSuffix);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
        </Link>
    </ItemDefinitionGroup>

    <!-- Additional Dependencies for Enclaves -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave'">
        <Link>
            <!-- All, except OP-TEE Simulation -->
            <IgnoreAllDefaultLibraries Condition="!($(OEIsTz) == True And $(OEIsSim) == True)">True</IgnoreAllDefaultLibraries>

            <!-- x86-SGX-* -->
            <AdditionalDependencies Condition="$(OEIsSgx) == True And $(OEIsX86) == True">$(OESgxHwX86)\oecore.lib;$(OESgxHwX86)\oesocket_enc.lib;$(OESgxHwX86)\oestdio_enc.lib;$(OESgxHwLibsT)</AdditionalDependencies>

            <!-- x64-SGX-* -->
            <AdditionalDependencies Condition="$(OEIsSgx) == True And $(OEIsX64) == True">$(OESgxHwX64)\oecore.lib;$(OESgxHwX64)\oesocket_enc.lib;$(OESgxHwX64)\oestdio_enc.lib;$(OESgxHwLibsT)</AdditionalDependencies>

            <!-- x86-SGX-Simulation-* -->
            <AdditionalDependencies Condition="$(OEIsSgx) == True And $(OEIsX86) == True And $(OEIsSim) == True">$(OESgxSimX86)\oecore.lib;$(OESgxSimX86)\oesocket_enc.lib;$(OESgxSimX86)\oestdio_enc.lib;$(OESgxSimLibsT)</AdditionalDependencies>

            <!-- x64-SGX-Simulation-* -->
            <AdditionalDependencies Condition="$(OEIsSgx) == True And $(OEIsX64) == True And $(OEIsSim) == True">$(OESgxSimX64)\oecore.lib;$(OESgxSimX64)\oesocket_enc.lib;$(OESgxSimX64)\oestdio_enc.lib;$(OESgxSimLibsT)</AdditionalDependencies>

            <!-- x86-OPTEE-Simulation-Debug -->
            <AdditionalDependencies Condition="$(OEIsTz) == True And $(OEIsX86) == True And $(OEIsSim) == True">$(OEOpteeSimX86)\oecore.lib;$(OEOpteeSimX86)\oesocket_enc.lib;$(OEOpteeSimX86)\oestdio_enc.lib;$(OEOpteeSimX86)\oeenclave_opteesim.lib;$(OEOpteeSimX86)\mbedcrypto.lib;$(OEOpteeSimX86)\mbedx509.lib;onecore.lib;%(AdditionalDependencies)</AdditionalDependencies>
        </Link>
    </ItemDefinitionGroup>

    <!-- Additional Dependencies for Hosts -->
    <ItemDefinitionGroup Condition="'$(OEType)' != 'Enclave'">
        <Link>
            <!-- x86-SGX-* -->
            <AdditionalDependencies Condition="$(OEIsSgx) == True And $(OEIsX86) == True">$(OESgxHwX86)\oehost.lib;$(OESgxHwX86)\oesocket_host.lib;$(OESgxHwX86)\oestdio_host.lib;onecore.lib;$(OESgxHwLibsU);%(AdditionalDependencies)</AdditionalDependencies>

            <!-- x64-SGX-* -->
            <AdditionalDependencies Condition="$(OEIsSgx) == True And $(OEIsX64) == True">$(OESgxHwX64)\oehost.lib;$(OESgxHwX64)\oesocket_host.lib;$(OESgxHwX64)\oestdio_host.lib;onecore.lib;$(OESgxHwLibsU);%(AdditionalDependencies)</AdditionalDependencies>

            <!-- x86-SGX-Simulation-* -->
            <AdditionalDependencies Condition="$(OEIsSgx) == True And $(OEIsX86) == True And $(OEIsSim) == True">$(OESgxSimX86)\oehost.lib;$(OESgxSimX86)\oesocket_host.lib;$(OESgxSimX86)\oestdio_host.lib;onecore.lib;$(OESgxSimLibsU);%(AdditionalDependencies)</AdditionalDependencies>

            <!-- x64-SGX-Simulation-* -->
            <AdditionalDependencies Condition="$(OEIsSgx) == True And $(OEIsX64) == True And $(OEIsSim) == True">$(OESgxSimX64)\oehost.lib;$(OESgxSimX64)\oesocket_host.lib;$(OESgxSimX64)\oestdio_host.lib;onecore.lib;$(OESgxSimLibsU);%(AdditionalDependencies)</AdditionalDependencies>

            <!-- arm-TZ-OPTEE-* -->
            <AdditionalDependencies Condition="$(OEIsTz) == True And $(OEIsARM) == True">$(OETzHwArm)\oehost.lib;$(OETzHwArm)\oesocket_host.lib;$(OETzHwArm)\oestdio_host.lib;$(OETzHwArm)\mbedcrypto.lib;$(OETzHwArm)\mbedx509.lib;onecore.lib;rpcrt4.lib;%(AdditionalDependencies)</AdditionalDependencies>

            <!-- x86-OPTEE-Simulation-Debug -->
            <AdditionalDependencies Condition="$(OEIsTz) == True And $(OEIsX86) == True And $(OEIsSim) == True">$(OEOpteeSimX86)\oehost.lib;$(OEOpteeSimX86)\oesocket_host.lib;$(OEOpteeSimX86)\oestdio_host.lib;$(OEOpteeSimX86)\oehost_opteesim.lib;$(OEOpteeSimX86)\mbedcrypto.lib;$(OEOpteeSimX86)\mbedx509.lib;onecore.lib;rpcrt4.lib;%(AdditionalDependencies)</AdditionalDependencies>
        </Link>
    </ItemDefinitionGroup>

    <!--
        =======================================================================
        Build Events Section
        =======================================================================

        This section configures build events.
    -->

    <!-- Post-Build Events for Enclaves -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave' And '$(ConfigurationType)' == 'DynamicLibrary'">
        <!-- *-SGX-* & *-SGX-Simulation-* -->
        <PostBuildEvent Condition="$(OEIsSgx) == True">
            <Command>"$(SGXSDKInstallPath)bin\win32\release\sgx_sign.exe" sign -key "$(ProjectDir)$(TargetName)_private.pem" -enclave "$(OutDir)$(TargetFileName)" -out "$(OutDir)$(TargetName).signed.dll" -config "$(ProjectDir)$(TargetName).config.xml"</Command>
            <Message>Sign the enclave for Intel SGX.</Message>
        </PostBuildEvent>

        <!-- *-SGX-Release -->
        <PostBuildEvent Condition="$(OEIsSgx) == True And '$(ConfigurationType)' == 'DynamicLibrary' And $(OEIsSim) == False And $(OEIsRelease) == True">
            <Command>"$(SGXSDKInstallPath)bin\win32\release\sgx_sign.exe" gendata -enclave "$(OutDir)$(TargetFileName)" -out "$(OutDir)$(TargetName).hex" -config "$(ProjectDir)$(TargetName).config.xml"</Command>
            <Message>Generate the enclave signing material for Intel SGX.</Message>
        </PostBuildEvent>
    </ItemDefinitionGroup>
    
</Project>