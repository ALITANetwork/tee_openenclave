// Copyright (c) Open Enclave SDK contributors.
// Licensed under the MIT License.

enclave {
    from "openenclave/edl/logging.edl" import oe_write_ocall;
    from "openenclave/edl/fcntl.edl" import *;
    from "platform.edl" import *;

    trusted {
        public void cb_test_waiter_thread_impl();

        public void cb_test_signal_thread_impl();

        public void enc_test_mutex();

        public void enc_test_mutex_counts(
            [out] size_t* count1,
            [out] size_t* count2);

        public void enc_wait(
            size_t num_threads);

        public void enc_signal();

        public void enc_wait_for_exclusive_access();

        public void enc_relinquish_exclusive_access();

        public void enc_lock_and_unlock_mutexes(
            [in, string] const char* mutex_ids);

        public void enc_test_tcs_exhaustion();

        public size_t enc_tcs_used_thread_count();

        public void enc_reader_thread_impl();
           
        public void enc_writer_thread_impl();

        public void enc_rw_results(
            [out] size_t* readers,
            [out] size_t* writers,
            [out] size_t* max_readers,
            [out] size_t* max_writers,
            [out] bool* readers_and_writers);

        public void* enc_malloc(
            size_t size,
            [out] int *err);

        public int64_t enc_strtol(
            [in, string] const char *nptr,
            int base,
            [out] int *err);
    };

    untrusted {
        void host_usleep(
            size_t microseconds);

        void host_wait();
    };
};
