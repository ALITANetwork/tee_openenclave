// Copyright (c) Open Enclave SDK contributors.
// Licensed under the MIT License.

enclave {
    from "openenclave/edl/logging.edl" import oe_write_ocall;
    from "openenclave/edl/fcntl.edl" import *;
    from "platform.edl" import *;

    trusted {
        public oe_result_t enc_get_init_ocall_result();

        public oe_result_t enc_set_enclave_id(
            unsigned id,
            [user_check] const void** base_addr);

        public oe_result_t enc_parallel_execution(
            unsigned flow_id,
            [user_check] void* counter,
            [user_check] void* release);

        public uint32_t enc_cross_enclave_call(
            uint32_t enclave_id,
            uint32_t value,
            uint32_t total);

        public void enc_set_factor(
            uint32_t factor);

        // Make an ocall and pass the given number.
        public void enc_make_ocall(int n);
        };

    untrusted {
        void init_ocall_handler(
            [user_check] void* arg);

        uint32_t host_cross_enclave_call(
            uint32_t enclave_id,
            uint32_t value,
            uint32_t total);

        // If *n > 1, call make_ocall(*n-1) on the next enclave.
        // Assert that *n does not change.
        void host_ocall_pointer([in]int *n);
    };
};
