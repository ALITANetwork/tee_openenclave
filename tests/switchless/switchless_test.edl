// Copyright (c) Open Enclave SDK contributors.
// Licensed under the MIT License.

enclave {
    from "openenclave/edl/logging.edl" import oe_write_ocall;
    from "openenclave/edl/fcntl.edl" import *;
    from "openenclave/edl/sgx/attestation.edl" import *;
    from "openenclave/edl/sgx/cpu.edl" import *;
    from "openenclave/edl/sgx/debug.edl" import *;
    from "openenclave/edl/sgx/thread.edl" import *;
    from "openenclave/edl/sgx/switchless.edl" import *;

    enum num_tcs_t {
        NUM_TCS = 32
    };

    trusted {
        // Test switchless ocalls
        public int enc_test_echo_switchless(
            [string, in] const char* in,
            [out] char out[100],
            int repeats);

        // Test regular ocalls (for baseline)
        public int enc_test_echo_regular(
            [string, in] const char* in,
            [out] char out[100],
            int repeats);

        // Switchless ecall
        public int enc_echo_switchless(
            [string, in] const char* in,
            [out] char out[100],
            [string, in] const char* str1,
            [in] char str2[100])
            transition_using_threads;

        // Regular ecall
        public int enc_echo_regular(
            [string, in] const char* in,
            [out] char out[100],
            [string, in] const char* str1,
            [in] char str2[100]);
    };

    untrusted {
        // Switchless ocall
        int host_echo_switchless(
            [string, in] const char* in,
            [out] char out[100],
            [string, in] const char* str1,
            [in] char str2[100])
            transition_using_threads;

        // Regular ocall
        int host_echo_regular(
            [string, in] const char* in,
            [out] char out[100],
            [string, in] const char* str1,
            [in] char str2[100]);
    };
};
